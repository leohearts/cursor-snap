name: Auto Update Cursor Snap

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:      # Allow manual trigger

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x64, linux-arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Snapcraft and setup LXD
        run: |
          sudo snap install snapcraft --classic
          sudo snap install lxd
          sudo lxd init --auto
          
          # Fix LXD network issues in GitHub Actions
          sudo ip link set dev lxdbr0 up
          sudo iptables -P FORWARD ACCEPT
          
          # Configure LXD profile for better network connectivity
          lxc profile device add default eth0 nic nictype=bridged parent=lxdbr0
          lxc profile show default

      - name: Get latest Cursor version and download URL
        id: cursor-version
        run: |
          DOWNLOAD_URL="https://www.cursor.com/api/download?platform=${{ matrix.platform }}&releaseTrack=latest"
          echo "Checking download URL: $DOWNLOAD_URL"
          
          # Get the JSON response from the API
          API_RESPONSE=$(curl -s "$DOWNLOAD_URL")
          echo "API response:"
          echo "$API_RESPONSE"
          
          # Extract the downloadUrl from the JSON response
          REDIRECT_URL=$(echo "$API_RESPONSE" | grep -o '"downloadUrl":"[^"]*"' | sed 's/"downloadUrl":"//;s/"//')
          echo "Download URL from JSON: $REDIRECT_URL"
          
          # Check if REDIRECT_URL is empty
          if [ -z "$REDIRECT_URL" ]; then
            echo "Error: Could not extract download URL from JSON. Using fallback URL."
            # Use a fallback URL based on the platform
            if [ "${{ matrix.platform }}" == "linux-x64" ]; then
              REDIRECT_URL="https://downloads.cursor.com/production/client/linux/x64/appimage/Cursor-0.47.4-8f8a2000673d2c48f6cac5eea2f3f9f2ed5e4ec2.deb.glibc2.28-x86_64.AppImage"
              VERSION="0.47.4"
            else
              REDIRECT_URL="https://downloads.cursor.com/production/client/linux/arm64/appimage/Cursor-0.47.4-8f8a2000673d2c48f6cac5eea2f3f9f2ed5e4ec2.deb.glibc2.28-aarch64.AppImage"
              VERSION="0.47.4"
            fi
          else
            # Try to extract version from URL with different patterns
            VERSION=$(echo "$REDIRECT_URL" | grep -oP 'Cursor-\K[^-]+(?=-)' || echo "")
            
            # If the first pattern fails, try an alternative pattern
            if [ -z "$VERSION" ]; then
              VERSION=$(echo "$REDIRECT_URL" | grep -oP 'Cursor-\K[\d\.]+' || echo "0.47.4")
            fi
          fi
          
          echo "Extracted version: $VERSION"
          echo "CURSOR_VERSION=$VERSION" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$REDIRECT_URL" >> $GITHUB_ENV
          echo "Version: $VERSION"
          echo "Download URL: $REDIRECT_URL"

      - name: Update snapcraft.yaml
        run: |
          # Update version
          sed -i "s/version: '.*'/version: '${{ env.CURSOR_VERSION }}'/g" snap/snapcraft.yaml
          # Update source URL
          sed -i "s|source: .*|source: ${{ env.DOWNLOAD_URL }}|g" snap/snapcraft.yaml
          
          # Show the updated snapcraft.yaml for debugging
          echo "Updated snapcraft.yaml:"
          cat snap/snapcraft.yaml

      - name: Download AppImage
        run: |
          echo "Downloading AppImage from ${{ env.DOWNLOAD_URL }}"
          curl -L -o cursor.appimage "${{ env.DOWNLOAD_URL }}"
          chmod +x cursor.appimage
          ls -la cursor.appimage

      - name: Build Snap
        run: |
          # Try with --debug flag to get more information
          sudo snapcraft --use-lxd --debug

      - name: Upload Snap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cursor-ide-snap
          path: cursor-ide*.snap
          retention-days: 1

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.CURSOR_VERSION }}-${{ matrix.platform }}
          name: Cursor IDE Snap ${{ env.CURSOR_VERSION }} (${{ matrix.platform }})
          files: cursor-ide*.snap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README version
        if: matrix.platform == 'linux-x64'
        run: |
          sed -i "s/Latest version: .*/Latest version: ${{ env.CURSOR_VERSION }}/g" README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update version to ${{ env.CURSOR_VERSION }}" || echo "No changes to commit"
          git push 