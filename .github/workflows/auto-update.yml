name: Auto Update Cursor Snap

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:      # Allow manual trigger

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x64, linux-arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Snapcraft
        run: |
          sudo snap install snapcraft --classic

      - name: Get latest Cursor version and download URL
        id: cursor-version
        run: |
          DOWNLOAD_URL="https://www.cursor.com/api/download?platform=${{ matrix.platform }}&releaseTrack=latest"
          echo "Checking download URL: $DOWNLOAD_URL"
          
          # Get the JSON response from the API
          API_RESPONSE=$(curl -s "$DOWNLOAD_URL")
          echo "API response:"
          echo "$API_RESPONSE"
          
          # Extract the downloadUrl from the JSON response
          REDIRECT_URL=$(echo "$API_RESPONSE" | grep -o '"downloadUrl":"[^"]*"' | sed 's/"downloadUrl":"//;s/"//')
          echo "Download URL from JSON: $REDIRECT_URL"
          
          # Check if REDIRECT_URL is empty
          if [ -z "$REDIRECT_URL" ]; then
            echo "Error: Could not extract download URL from JSON. Using fallback URL."
            # Use a fallback URL based on the platform
            if [ "${{ matrix.platform }}" == "linux-x64" ]; then
              REDIRECT_URL="https://downloads.cursor.com/production/client/linux/x64/appimage/Cursor-0.47.4-8f8a2000673d2c48f6cac5eea2f3f9f2ed5e4ec2.deb.glibc2.28-x86_64.AppImage"
              VERSION="0.47.4"
            else
              REDIRECT_URL="https://downloads.cursor.com/production/client/linux/arm64/appimage/Cursor-0.47.4-8f8a2000673d2c48f6cac5eea2f3f9f2ed5e4ec2.deb.glibc2.28-aarch64.AppImage"
              VERSION="0.47.4"
            fi
          else
            # Try to extract version from URL with different patterns
            VERSION=$(echo "$REDIRECT_URL" | grep -oP 'Cursor-\K[^-]+(?=-)' || echo "")
            
            # If the first pattern fails, try an alternative pattern
            if [ -z "$VERSION" ]; then
              VERSION=$(echo "$REDIRECT_URL" | grep -oP 'Cursor-\K[\d\.]+' || echo "0.47.4")
            fi
          fi
          
          echo "Extracted version: $VERSION"
          echo "CURSOR_VERSION=$VERSION" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$REDIRECT_URL" >> $GITHUB_ENV
          echo "Version: $VERSION"
          echo "Download URL: $REDIRECT_URL"

      - name: Update snapcraft.yaml
        run: |
          # Update version
          sed -i "s/version: '.*'/version: '${{ env.CURSOR_VERSION }}'/g" snap/snapcraft.yaml
          
          # Update the override-build section to use the downloaded AppImage
          cat > snap/snapcraft.yaml << EOF
          name: cursor-ide
          base: core22
          version: '${{ env.CURSOR_VERSION }}'
          summary: Modern IDE powered by AI
          description: |
            Cursor is a modern IDE powered by AI, designed to help developers write, 
            understand and debug code faster. It features AI-powered code completion, 
            refactoring, and explanation capabilities.

          grade: stable
          confinement: strict

          apps:
            cursor-ide:
              command: bin/cursor
              extensions: [gnome]
              plugs:
                - desktop
                - desktop-legacy
                - wayland
                - x11
                - home
                - network
                - browser-support
                - unity7
                - opengl
                - audio-playback

          parts:
            cursor-ide:
              plugin: dump
              source: ${{ env.DOWNLOAD_URL }}
              source-type: file
              override-build: |
                craftctl default
                mkdir -p \$SNAPCRAFT_PART_INSTALL/bin/
                # Copy the downloaded AppImage with the correct name
                cp \$SNAPCRAFT_PART_SRC/* \$SNAPCRAFT_PART_INSTALL/bin/cursor
                chmod +x \$SNAPCRAFT_PART_INSTALL/bin/cursor
          EOF
          
          # Show the updated snapcraft.yaml for debugging
          echo "Updated snapcraft.yaml:"
          cat snap/snapcraft.yaml

      - name: Build Snap (Direct Method)
        run: |
          # Try building directly without virtualization
          sudo SNAPCRAFT_BUILD_ENVIRONMENT=host snapcraft

      - name: Upload Snap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cursor-ide-snap
          path: cursor-ide*.snap
          retention-days: 1

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.CURSOR_VERSION }}-${{ matrix.platform }}
          name: Cursor IDE Snap ${{ env.CURSOR_VERSION }} (${{ matrix.platform }})
          files: cursor-ide*.snap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README version
        if: matrix.platform == 'linux-x64'
        run: |
          sed -i "s/Latest version: .*/Latest version: ${{ env.CURSOR_VERSION }}/g" README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update version to ${{ env.CURSOR_VERSION }}" || echo "No changes to commit"
          git push 